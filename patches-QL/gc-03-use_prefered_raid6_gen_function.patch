From cd356bf85dbdba7ba7066e20ebc2adc51d38155e Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Wed, 4 Dec 2013 13:55:22 +0800
Subject: [PATCH] Use prefered raid6 gen function.

---
 lib/Kconfig       | 10 ++++++++++
 lib/raid6/algos.c | 34 ++++++++++++++++++++++++++++++++--
 2 files changed, 42 insertions(+), 2 deletions(-)

diff --git a/lib/Kconfig b/lib/Kconfig
index 601965a..4c3ebb6 100644
--- a/lib/Kconfig
+++ b/lib/Kconfig
@@ -10,6 +10,16 @@ menu "Library routines"
 config RAID6_PQ
 	tristate
 
+config RAID6_USE_PREFER_GEN
+	boolean "Use prefered raid6 gen function."
+	default n
+	depends on RAID6_PQ
+	help
+	  This option is provided for using prefered raid6 gen function
+	  directly instead of calculating the best durning boot-up.
+	  The prefered function should be the same as the best one from
+	  calculating.
+
 config BITREVERSE
 	tristate
 
diff --git a/lib/raid6/algos.c b/lib/raid6/algos.c
index 975c6e0..2635121 100644
--- a/lib/raid6/algos.c
+++ b/lib/raid6/algos.c
@@ -128,6 +128,29 @@ static inline const struct raid6_recov_calls *raid6_choose_recov(void)
 	return best;
 }
 
+#ifdef CONFIG_RAID6_USE_PREFER_GEN
+static inline const struct raid6_calls *raid6_choose_prefer_gen(void)
+{
+	const struct raid6_calls *const *algo;
+	const struct raid6_calls *best;
+
+	for (best = NULL, algo = raid6_algos; *algo; algo++) {
+		if (!best || (*algo)->prefer >= best->prefer) {
+			if ((*algo)->valid && !(*algo)->valid())
+				continue;
+			best = *algo;
+		}
+	}
+
+	if (best) {
+		printk("raid6: using algorithm %s\n", best->name);
+		raid6_call = *best;
+	} else
+		printk("raid6: Yikes!  No algorithm found!\n");
+
+	return best;
+}
+#else
 static inline const struct raid6_calls *raid6_choose_gen(
 	void *(*const dptrs)[(65536/PAGE_SIZE)+2], const int disks)
 {
@@ -199,6 +222,7 @@ static inline const struct raid6_calls *raid6_choose_gen(
 
 	return best;
 }
+#endif
 
 
 /* Try to pick the best algorithm */
@@ -206,10 +230,11 @@ static inline const struct raid6_calls *raid6_choose_gen(
 
 int __init raid6_select_algo(void)
 {
-	const int disks = (65536/PAGE_SIZE)+2;
-
 	const struct raid6_calls *gen_best;
 	const struct raid6_recov_calls *rec_best;
+#ifndef CONFIG_RAID6_USE_PREFER_GEN
+	const int disks = (65536/PAGE_SIZE)+2;
+
 	char *syndromes;
 	void *dptrs[(65536/PAGE_SIZE)+2];
 	int i;
@@ -230,11 +255,16 @@ int __init raid6_select_algo(void)
 
 	/* select raid gen_syndrome function */
 	gen_best = raid6_choose_gen(&dptrs, disks);
+#else
+	gen_best = raid6_choose_prefer_gen();
+#endif
 
 	/* select raid recover functions */
 	rec_best = raid6_choose_recov();
 
+#ifndef CONFIG_RAID6_USE_PREFER_GEN
 	free_pages((unsigned long)syndromes, 1);
+#endif
 
 	return gen_best && rec_best ? 0 : -EINVAL;
 }
-- 
2.1.1

